<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180720 16:37:22.759" generator="Robot 3.0.4 (Python 2.7.15 on win32)">
<suite source="C:\OmniUpdate\tests\OmniUpdate_Test_Case_1.robot" id="s1" name="OmniUpdate Test Case 1">
<kw type="setup" name="Open Address book">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>${SESSIOINNAME}</arg>
<arg>${API}</arg>
</arguments>
<msg timestamp="20180720 16:37:23.045" level="INFO">Creating Session using : alias=AddressBook, url=http://front-end.oudemo.com/api, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20180720 16:37:23.046" starttime="20180720 16:37:23.045"></status>
</kw>
<kw name="Open Browser and Go to URL" library="resource-Chrome">
<arguments>
<arg>${URL}</arg>
</arguments>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20180720 16:37:23.046" level="INFO">Opening browser 'Chrome' to base url 'http://jr-qa.oudemo.com/'.</msg>
<status status="PASS" endtime="20180720 16:37:26.309" starttime="20180720 16:37:23.046"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" endtime="20180720 16:37:27.466" starttime="20180720 16:37:26.309"></status>
</kw>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20180720 16:37:27.467" starttime="20180720 16:37:27.466"></status>
</kw>
<status status="PASS" endtime="20180720 16:37:27.467" starttime="20180720 16:37:23.046"></status>
</kw>
<status status="PASS" endtime="20180720 16:37:27.468" starttime="20180720 16:37:23.044"></status>
</kw>
<test id="s1-t1" name="GUI Filter Contacts">
<kw name="API Create New Entry" library="resource-Chrome">
<arguments>
<arg>${SESSIOINNAME}</arg>
<arg>Bruce</arg>
<arg>Banner</arg>
<arg>incredible@hulk.com</arg>
<arg>1234567890</arg>
<arg>123 Green Way</arg>
<arg>Brooklyn</arg>
<arg>NY</arg>
<arg>11223</arg>
</arguments>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>/address/new</arg>
<arg>data={"apikey": "${APIKEY}", "firstName": "${firstName}", "lastName": "${lastName}", "email": "${email}", "phone": ${phone}, "address": "${address}", "city": "${city}", "state": "${state}", "zipcode": "${zipcode}"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20180720 16:37:27.733" level="INFO">Post Request using : alias=AddressBook, uri=/address/new, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20180720 16:37:27.733" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180720 16:37:27.733" starttime="20180720 16:37:27.472"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>'${resp.status_code}' == '200'</arg>
</arguments>
<status status="PASS" endtime="20180720 16:37:27.734" starttime="20180720 16:37:27.733"></status>
</kw>
<kw name="Prettify JSON" library="resource-Chrome">
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${RawJSON}</arg>
</arguments>
<assign>
<var>${j1}</var>
</assign>
<msg timestamp="20180720 16:37:27.735" level="INFO">${j1} = {u'city': u'Brooklyn', u'firstName': u'Bruce', u'lastName': u'Banner', u'zipcode': u'11223', u'id': u'-LHu2XaCBfcf9xoh6JQs', u'phone': 1234567890, u'state': u'NY', u'address': u'123 Green Way', u'emai...</msg>
<status status="PASS" endtime="20180720 16:37:27.735" starttime="20180720 16:37:27.735"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${j1}</arg>
<arg>'</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${j2}</var>
</assign>
<msg timestamp="20180720 16:37:27.736" level="INFO">${j2} = {u"city": u"Brooklyn", u"firstName": u"Bruce", u"lastName": u"Banner", u"zipcode": u"11223", u"id": u"-LHu2XaCBfcf9xoh6JQs", u"phone": 1234567890, u"state": u"NY", u"address": u"123 Green Way", u"emai...</msg>
<status status="PASS" endtime="20180720 16:37:27.736" starttime="20180720 16:37:27.735"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${j2}</arg>
<arg>(u")</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${j3}</var>
</assign>
<msg timestamp="20180720 16:37:27.736" level="INFO">${j3} = {"city": "Brooklyn", "firstName": "Bruce", "lastName": "Banner", "zipcode": "11223", "id": "-LHu2XaCBfcf9xoh6JQs", "phone": 1234567890, "state": "NY", "address": "123 Green Way", "email": "incredible@...</msg>
<status status="PASS" endtime="20180720 16:37:27.736" starttime="20180720 16:37:27.736"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${j3}</arg>
<arg>(L,)</arg>
<arg>,</arg>
</arguments>
<assign>
<var>${j4}</var>
</assign>
<msg timestamp="20180720 16:37:27.737" level="INFO">${j4} = {"city": "Brooklyn", "firstName": "Bruce", "lastName": "Banner", "zipcode": "11223", "id": "-LHu2XaCBfcf9xoh6JQs", "phone": 1234567890, "state": "NY", "address": "123 Green Way", "email": "incredible@...</msg>
<status status="PASS" endtime="20180720 16:37:27.737" starttime="20180720 16:37:27.736"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${j4}</arg>
<arg>pretty_print=True</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20180720 16:37:27.738" level="INFO">To JSON using : content={"city": "Brooklyn", "firstName": "Bruce", "lastName": "Banner", "zipcode": "11223", "id": "-LHu2XaCBfcf9xoh6JQs", "phone": 1234567890, "state": "NY", "address": "123 Green Way", "email": "incredible@hulk.com"} </msg>
<msg timestamp="20180720 16:37:27.738" level="INFO">To JSON using : pretty_print=True </msg>
<msg timestamp="20180720 16:37:27.738" level="INFO">${json} = {
    "address": "123 Green Way",
    "city": "Brooklyn",
    "email": "incredible@hulk.com",
    "firstName": "Bruce",
    "id": "-LHu2XaCBfcf9xoh6JQs",
    "lastName": "Banner",
    "phone": 1234567...</msg>
<status status="PASS" endtime="20180720 16:37:27.738" starttime="20180720 16:37:27.737"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${JSON}</arg>
<arg>${json}</arg>
</arguments>
<msg timestamp="20180720 16:37:27.738" level="INFO">${JSON} = {
    "address": "123 Green Way",
    "city": "Brooklyn",
    "email": "incredible@hulk.com",
    "firstName": "Bruce",
    "id": "-LHu2XaCBfcf9xoh6JQs",
    "lastName": "Banner",
    "phone": 1234567...</msg>
<status status="PASS" endtime="20180720 16:37:27.738" starttime="20180720 16:37:27.738"></status>
</kw>
<status status="PASS" endtime="20180720 16:37:27.738" starttime="20180720 16:37:27.734"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${JSON}</arg>
</arguments>
<assign>
<var>${NewEntry}</var>
</assign>
<msg timestamp="20180720 16:37:27.739" level="INFO">${NewEntry} = {
    "address": "123 Green Way",
    "city": "Brooklyn",
    "email": "incredible@hulk.com",
    "firstName": "Bruce",
    "id": "-LHu2XaCBfcf9xoh6JQs",
    "lastName": "Banner",
    "phone": 1234567...</msg>
<status status="PASS" endtime="20180720 16:37:27.739" starttime="20180720 16:37:27.739"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${firstName}${SPACE}${lastName}</arg>
</arguments>
<assign>
<var>${first&amp;last}</var>
</assign>
<msg timestamp="20180720 16:37:27.740" level="INFO">${first&amp;last} = Bruce Banner</msg>
<status status="PASS" endtime="20180720 16:37:27.740" starttime="20180720 16:37:27.739"></status>
</kw>
<kw name="Get New Entry ID" library="resource-Chrome">
<arguments>
<arg>${NewEntry}</arg>
<arg>${first&amp;last}</arg>
</arguments>
<kw name="Fetch From Right" library="String">
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<arguments>
<arg>${json}</arg>
<arg>"id": "</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20180720 16:37:27.741" level="INFO">${id1} = -LHu2XaCBfcf9xoh6JQs",
    "lastName": "Banner",
    "phone": 1234567890,
    "state": "NY",
    "zipcode": "11223"
}</msg>
<status status="PASS" endtime="20180720 16:37:27.741" starttime="20180720 16:37:27.740"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${id1}</arg>
<arg>",</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20180720 16:37:27.741" level="INFO">${id2} = -LHu2XaCBfcf9xoh6JQs</msg>
<status status="PASS" endtime="20180720 16:37:27.741" starttime="20180720 16:37:27.741"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${ID}</arg>
<arg>${name}</arg>
<arg>${id2}</arg>
</arguments>
<status status="PASS" endtime="20180720 16:37:27.742" starttime="20180720 16:37:27.741"></status>
</kw>
<kw name="Log Dictionary" library="Collections">
<doc>Logs the size and contents of the ``dictionary`` using given ``level``.</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<msg timestamp="20180720 16:37:27.742" level="INFO">Dictionary has one item:
Bruce Banner: -LHu2XaCBfcf9xoh6JQs</msg>
<status status="PASS" endtime="20180720 16:37:27.742" starttime="20180720 16:37:27.742"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<msg timestamp="20180720 16:37:27.743" level="INFO">${ID} = {u'Bruce Banner': u'-LHu2XaCBfcf9xoh6JQs'}</msg>
<status status="PASS" endtime="20180720 16:37:27.743" starttime="20180720 16:37:27.742"></status>
</kw>
<status status="PASS" endtime="20180720 16:37:27.743" starttime="20180720 16:37:27.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${NewEntry}</arg>
</arguments>
<msg timestamp="20180720 16:37:27.743" level="INFO">{
    "address": "123 Green Way",
    "city": "Brooklyn",
    "email": "incredible@hulk.com",
    "firstName": "Bruce",
    "id": "-LHu2XaCBfcf9xoh6JQs",
    "lastName": "Banner",
    "phone": 1234567890,
    "state": "NY",
    "zipcode": "11223"
}</msg>
<status status="PASS" endtime="20180720 16:37:27.743" starttime="20180720 16:37:27.743"></status>
</kw>
<status status="PASS" endtime="20180720 16:37:27.744" starttime="20180720 16:37:27.471"></status>
</kw>
<kw name="API Create New Entry" library="resource-Chrome">
<arguments>
<arg>${SESSIOINNAME}</arg>
<arg>Donald</arg>
<arg>Blake</arg>
<arg>thor@odinson.com</arg>
<arg>1234567890</arg>
<arg>123 Mjolnir Way</arg>
<arg>Brooklyn</arg>
<arg>NY</arg>
<arg>11223</arg>
</arguments>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>${session}</arg>
<arg>/address/new</arg>
<arg>data={"apikey": "${APIKEY}", "firstName": "${firstName}", "lastName": "${lastName}", "email": "${email}", "phone": ${phone}, "address": "${address}", "city": "${city}", "state": "${state}", "zipcode": "${zipcode}"}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20180720 16:37:27.989" level="INFO">Post Request using : alias=AddressBook, uri=/address/new, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20180720 16:37:27.990" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180720 16:37:27.990" starttime="20180720 16:37:27.745"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>'${resp.status_code}' == '200'</arg>
</arguments>
<status status="PASS" endtime="20180720 16:37:27.995" starttime="20180720 16:37:27.991"></status>
</kw>
<kw name="Prettify JSON" library="resource-Chrome">
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${RawJSON}</arg>
</arguments>
<assign>
<var>${j1}</var>
</assign>
<msg timestamp="20180720 16:37:28.000" level="INFO">${j1} = {u'city': u'Brooklyn', u'firstName': u'Donald', u'lastName': u'Blake', u'zipcode': u'11223', u'id': u'-LHu2XeEUa-v4FTcmbV4', u'phone': 1234567890, u'state': u'NY', u'address': u'123 Mjolnir Way', u'em...</msg>
<status status="PASS" endtime="20180720 16:37:28.001" starttime="20180720 16:37:27.998"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${j1}</arg>
<arg>'</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${j2}</var>
</assign>
<msg timestamp="20180720 16:37:28.004" level="INFO">${j2} = {u"city": u"Brooklyn", u"firstName": u"Donald", u"lastName": u"Blake", u"zipcode": u"11223", u"id": u"-LHu2XeEUa-v4FTcmbV4", u"phone": 1234567890, u"state": u"NY", u"address": u"123 Mjolnir Way", u"em...</msg>
<status status="PASS" endtime="20180720 16:37:28.005" starttime="20180720 16:37:28.002"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${j2}</arg>
<arg>(u")</arg>
<arg>"</arg>
</arguments>
<assign>
<var>${j3}</var>
</assign>
<msg timestamp="20180720 16:37:28.007" level="INFO">${j3} = {"city": "Brooklyn", "firstName": "Donald", "lastName": "Blake", "zipcode": "11223", "id": "-LHu2XeEUa-v4FTcmbV4", "phone": 1234567890, "state": "NY", "address": "123 Mjolnir Way", "email": "thor@odin...</msg>
<status status="PASS" endtime="20180720 16:37:28.007" starttime="20180720 16:37:28.005"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${j3}</arg>
<arg>(L,)</arg>
<arg>,</arg>
</arguments>
<assign>
<var>${j4}</var>
</assign>
<msg timestamp="20180720 16:37:28.008" level="INFO">${j4} = {"city": "Brooklyn", "firstName": "Donald", "lastName": "Blake", "zipcode": "11223", "id": "-LHu2XeEUa-v4FTcmbV4", "phone": 1234567890, "state": "NY", "address": "123 Mjolnir Way", "email": "thor@odin...</msg>
<status status="PASS" endtime="20180720 16:37:28.008" starttime="20180720 16:37:28.007"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${j4}</arg>
<arg>pretty_print=True</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20180720 16:37:28.010" level="INFO">To JSON using : content={"city": "Brooklyn", "firstName": "Donald", "lastName": "Blake", "zipcode": "11223", "id": "-LHu2XeEUa-v4FTcmbV4", "phone": 1234567890, "state": "NY", "address": "123 Mjolnir Way", "email": "thor@odinson.com"} </msg>
<msg timestamp="20180720 16:37:28.010" level="INFO">To JSON using : pretty_print=True </msg>
<msg timestamp="20180720 16:37:28.011" level="INFO">${json} = {
    "address": "123 Mjolnir Way",
    "city": "Brooklyn",
    "email": "thor@odinson.com",
    "firstName": "Donald",
    "id": "-LHu2XeEUa-v4FTcmbV4",
    "lastName": "Blake",
    "phone": 12345678...</msg>
<status status="PASS" endtime="20180720 16:37:28.011" starttime="20180720 16:37:28.009"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${JSON}</arg>
<arg>${json}</arg>
</arguments>
<msg timestamp="20180720 16:37:28.014" level="INFO">${JSON} = {
    "address": "123 Mjolnir Way",
    "city": "Brooklyn",
    "email": "thor@odinson.com",
    "firstName": "Donald",
    "id": "-LHu2XeEUa-v4FTcmbV4",
    "lastName": "Blake",
    "phone": 12345678...</msg>
<status status="PASS" endtime="20180720 16:37:28.014" starttime="20180720 16:37:28.012"></status>
</kw>
<status status="PASS" endtime="20180720 16:37:28.014" starttime="20180720 16:37:27.995"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${JSON}</arg>
</arguments>
<assign>
<var>${NewEntry}</var>
</assign>
<msg timestamp="20180720 16:37:28.016" level="INFO">${NewEntry} = {
    "address": "123 Mjolnir Way",
    "city": "Brooklyn",
    "email": "thor@odinson.com",
    "firstName": "Donald",
    "id": "-LHu2XeEUa-v4FTcmbV4",
    "lastName": "Blake",
    "phone": 12345678...</msg>
<status status="PASS" endtime="20180720 16:37:28.016" starttime="20180720 16:37:28.015"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${firstName}${SPACE}${lastName}</arg>
</arguments>
<assign>
<var>${first&amp;last}</var>
</assign>
<msg timestamp="20180720 16:37:28.018" level="INFO">${first&amp;last} = Donald Blake</msg>
<status status="PASS" endtime="20180720 16:37:28.018" starttime="20180720 16:37:28.017"></status>
</kw>
<kw name="Get New Entry ID" library="resource-Chrome">
<arguments>
<arg>${NewEntry}</arg>
<arg>${first&amp;last}</arg>
</arguments>
<kw name="Fetch From Right" library="String">
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<arguments>
<arg>${json}</arg>
<arg>"id": "</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20180720 16:37:28.021" level="INFO">${id1} = -LHu2XeEUa-v4FTcmbV4",
    "lastName": "Blake",
    "phone": 1234567890,
    "state": "NY",
    "zipcode": "11223"
}</msg>
<status status="PASS" endtime="20180720 16:37:28.021" starttime="20180720 16:37:28.020"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${id1}</arg>
<arg>",</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20180720 16:37:28.023" level="INFO">${id2} = -LHu2XeEUa-v4FTcmbV4</msg>
<status status="PASS" endtime="20180720 16:37:28.023" starttime="20180720 16:37:28.022"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${ID}</arg>
<arg>${name}</arg>
<arg>${id2}</arg>
</arguments>
<status status="PASS" endtime="20180720 16:37:28.025" starttime="20180720 16:37:28.023"></status>
</kw>
<kw name="Log Dictionary" library="Collections">
<doc>Logs the size and contents of the ``dictionary`` using given ``level``.</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<msg timestamp="20180720 16:37:28.026" level="INFO">Dictionary size is 2 and it contains following items:
Bruce Banner: -LHu2XaCBfcf9xoh6JQs
Donald Blake: -LHu2XeEUa-v4FTcmbV4</msg>
<status status="PASS" endtime="20180720 16:37:28.026" starttime="20180720 16:37:28.025"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ID}</arg>
</arguments>
<msg timestamp="20180720 16:37:28.028" level="INFO">${ID} = {u'Bruce Banner': u'-LHu2XaCBfcf9xoh6JQs', u'Donald Blake': u'-LHu2XeEUa-v4FTcmbV4'}</msg>
<status status="PASS" endtime="20180720 16:37:28.028" starttime="20180720 16:37:28.027"></status>
</kw>
<status status="PASS" endtime="20180720 16:37:28.029" starttime="20180720 16:37:28.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${NewEntry}</arg>
</arguments>
<msg timestamp="20180720 16:37:28.030" level="INFO">{
    "address": "123 Mjolnir Way",
    "city": "Brooklyn",
    "email": "thor@odinson.com",
    "firstName": "Donald",
    "id": "-LHu2XeEUa-v4FTcmbV4",
    "lastName": "Blake",
    "phone": 1234567890,
    "state": "NY",
    "zipcode": "11223"
}</msg>
<status status="PASS" endtime="20180720 16:37:28.030" starttime="20180720 16:37:28.029"></status>
</kw>
<status status="PASS" endtime="20180720 16:37:28.030" starttime="20180720 16:37:27.745"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" endtime="20180720 16:37:28.218" starttime="20180720 16:37:28.033"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Bruce</arg>
</arguments>
<assign>
<var>${people.person1.firstName}</var>
</assign>
<msg timestamp="20180720 16:37:28.222" level="INFO">${people.person1.firstName} = Bruce</msg>
<status status="PASS" endtime="20180720 16:37:28.222" starttime="20180720 16:37:28.220"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Banner</arg>
</arguments>
<assign>
<var>${people.person1.lastName}</var>
</assign>
<msg timestamp="20180720 16:37:28.224" level="INFO">${people.person1.lastName} = Banner</msg>
<status status="PASS" endtime="20180720 16:37:28.224" starttime="20180720 16:37:28.223"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>incredible@hulk.com</arg>
</arguments>
<assign>
<var>${people.person1.email}</var>
</assign>
<msg timestamp="20180720 16:37:28.226" level="INFO">${people.person1.email} = incredible@hulk.com</msg>
<status status="PASS" endtime="20180720 16:37:28.226" starttime="20180720 16:37:28.225"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Donald</arg>
</arguments>
<assign>
<var>${people.person2.firstName}</var>
</assign>
<msg timestamp="20180720 16:37:28.228" level="INFO">${people.person2.firstName} = Donald</msg>
<status status="PASS" endtime="20180720 16:37:28.228" starttime="20180720 16:37:28.226"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Blake</arg>
</arguments>
<assign>
<var>${people.person2.lastName}</var>
</assign>
<msg timestamp="20180720 16:37:28.236" level="INFO">${people.person2.lastName} = Blake</msg>
<status status="PASS" endtime="20180720 16:37:28.237" starttime="20180720 16:37:28.233"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>thor@odinson.com</arg>
</arguments>
<assign>
<var>${people.person2.email}</var>
</assign>
<msg timestamp="20180720 16:37:28.238" level="INFO">${people.person2.email} = thor@odinson.com</msg>
<status status="PASS" endtime="20180720 16:37:28.238" starttime="20180720 16:37:28.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${people}</arg>
</arguments>
<msg timestamp="20180720 16:37:28.242" level="FAIL">Variable '${people}' not found.</msg>
<status status="FAIL" endtime="20180720 16:37:28.242" starttime="20180720 16:37:28.240"></status>
</kw>
<tags>
<tag>Functionality</tag>
</tags>
<status status="FAIL" endtime="20180720 16:37:28.243" critical="yes" starttime="20180720 16:37:27.469">Variable '${people}' not found.</status>
</test>
<kw type="teardown" name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" endtime="20180720 16:37:30.408" starttime="20180720 16:37:28.245"></status>
</kw>
<doc>This is a test case for OmniUpdate Address Book</doc>
<status status="FAIL" endtime="20180720 16:37:30.408" starttime="20180720 16:37:22.765"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">Functionality</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="OmniUpdate Test Case 1" pass="0">OmniUpdate Test Case 1</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
